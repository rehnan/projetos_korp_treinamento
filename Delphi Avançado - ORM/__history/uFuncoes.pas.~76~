unit uFuncoes;

interface

uses
  System.SysUtils, System.Variants, System.Classes, Vcl.Dialogs,  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uVariavelDeClasse, Vcl.StdCtrls;

type
  TFuncoes = class
    strict private
      class var FInstance : TFuncoes;
      
    private
      class procedure ReleaseInstance();
      
    public
      class function GetInstance(): TFuncoes;
      function FormatarData(const d : TDateTime) : String;
  end;

implementation

{ TFuncoes }

function TFuncoes.FormatarData(const d: TDateTime): String;
var
  dia, mes, ano : Word;
  dt : TDateTime;
begin
 
  dia := StrToint(FormatDateTime('dd', dt.data));
  mes := StrToint(FormatDateTime('mm',  dt.Date));
  ano := StrToint(FormatDateTime('yyyy',  dt.Date));
  
  //Result := IntToStr(ano) + IntToStr(mes) + IntToStr(dia);
  ShowMessage(IntToStr(ano) + IntToStr(mes) + IntToStr(dia));
  Result := 'ola';
end;

class function TFuncoes.GetInstance: TFuncoes;
begin
  if not Assigned(Self.FInstance) then
    self.FInstance := TFuncoes.Create;
  Result := Self.FInstance;
end;
 
class procedure TFuncoes.ReleaseInstance;
begin
  if Assigned(Self.FInstance) then
    Self.FInstance.Free;
end;
 
initialization
finalization
  TFuncoes.ReleaseInstance();

end.
